name: Format, lint & test
on:
  push:
  workflow_dispatch:
  schedule:
  - cron: '0 1 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.9', '3.8']
    env:
      TOX_PARALLEL_NO_SPINNER: 1
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg', 'tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: python -m pip install tox
      - run: tox --parallel -e checkformatting,lint,tests
        if: matrix.python-version == '3.10'
      - run: tox
        if: matrix.python-version != '3.10'
      - name: Upload coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.*
  coverage:
    name: Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg', 'tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Download coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - run: python -m pip install tox
      - run: tox -e coverage
