[metadata]
name = testpilot
version = 0.0.1
description = Format, lint and test only the files that have changed on the current branch.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/seanh/testpilot
project_urls =
    Bug Tracker = https://github.com/seanh/testpilot/issues
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: BSD License
    Intended Audience :: Developers

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.7
install_requires =
    toml

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    testpilot = testpilot.app:main

[pycodestyle]
ignore =
    # Disable pycodestyle errors and warnings that we don't care about because
    # Black formats our code for us.
    E203,  # Whitespace before ':',
    E231,  # Missing whitespace after ',',
    E501,  # Line too long,
    W503,  # Line break before binary operator,

    # Bare except. PyLint finds these for us so we don't need pycodestyle to.
    E722,

[tox:tox]
envlist = {py310,py39,py38,py37}-tests
minversion = 3.25.0
requires =
  tox-pip-sync
  tox-pyenv
  tox-envfile
  tox-run-command
tox_pyenv_fallback = false
isolated_build = true

[testenv]
parallel_show_output = true
passenv =
    CUSTOM_COMPILE_COMMAND  # For pip-compile.
    tests: PYTEST_ADDOPTS
deps =
    {dev,tests,lint}: -r requirements/requirements.txt
    {tests,lint}: -r requirements/tests.txt
    dev: -r requirements/dev.txt
    {format,checkformatting}: -r requirements/format.txt
    lint: -r requirements/lint.txt
    coverage: -r requirements/coverage.txt
    py39-tests: -r requirements/requirements-py39.txt
    py39-tests: -r requirements/tests-py39.txt
    py39-dev: -r requirements/dev-py39.txt
    py38-tests: -r requirements/requirements-py38.txt
    py38-tests: -r requirements/tests-py38.txt
    py38-dev: -r requirements/dev-py38.txt
    py37-tests: -r requirements/requirements-py37.txt
    py37-tests: -r requirements/tests-py37.txt
    py37-dev: -r requirements/dev-py37.txt
depends =
    coverage: tests
allowlist_externals =
    echo
commands =
    tests: coverage run -m pytest -v {posargs:tests/unit/}
    coverage: -coverage combine
    coverage: coverage report
    lint: pylint src bin
    lint: pylint --rcfile=tests/pyproject.toml tests
    lint: pydocstyle src tests bin
    lint: pycodestyle src tests bin
    format: black src tests bin
    format: isort --quiet --atomic src tests bin
    checkformatting: black --check src tests bin
    checkformatting: isort --quiet --check-only src tests bin
